package com.reactiveworks.product.individualproduct;

import java.util.Map;
import com.reactiveworks.product.exception.ProductException;
import jakarta.persistence.DiscriminatorValue;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Inheritance;
import jakarta.persistence.InheritanceType;

@Entity
@Inheritance(strategy=InheritanceType.JOINED)
public class Product {
	@Id
	String productId;
	@Id
	String productName;
	@Id
	String productType;
	@Id
	double price; 
	@Id
	int warranty; 
	@Id
	String manufecturedDt;

	public String getProductId() {
		return productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	public String getProductName() {
		return productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	public String getProductType() {
		return productType;
	}

	public void setProductType(String productType) {
		this.productType = productType;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public int getWarranty() {
		return warranty;
	}

	public void setWarranty(int warranty) {
		this.warranty = warranty;
	}

	public String getManufecturedDt() {
		return manufecturedDt;
	}

	public void setManufecturedDt(String manufecturedDt) {
		this.manufecturedDt = manufecturedDt;
	}



	public void buildProduct(Map<String,String> map) throws ProductException{
		this.productId = map.get("ProductId");
		this.productName = map.get("ProductName");
		this.productType = map.get("ProductType");
		try {
			this.price = Double.parseDouble(map.get("Price"));
			this.warranty = Integer.parseInt(map.get("Warranty"));
		}
		catch(NumberFormatException e) {
			throw new ProductException("Data Type is not in proper for which dataType we want to convert");
		}
		this.manufecturedDt = map.get("ManufecturedDt");	
	}
}
